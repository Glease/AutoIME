//version: 1707058017

plugins {
    id 'com.gtnewhorizons.gtnhconvention'
}

dependencies {
    implementation(project(':natives').components)
}

jar {
//    include(project(':natives').components.named('main'))
    from {
        def all = project(':natives').components.named('main').get().binaries.get().findAll {
            it instanceof CppSharedLibrary && it.optimized
        }
        all*.runtimeFile
    }
}

task createSignedJarDir() {
    onlyIf { // Skip the task if our secret data isn't available
        project.hasProperty('keyStore')
    }
    doLast {
        mkdir new File(jar.destinationDirectory.get().asFile, "signed").toString()
    }
}

// sign jars
task signJar() {
    dependsOn reobfJar
    dependsOn createSignedJarDir
    onlyIf { // Skip the task if our secret data isn't available
        project.hasProperty('keyStore')
    }
    inputs.files jar.outputs.files
    jar.outputs.files.forEach {
        outputs.file jar.destinationDirectory.map { d -> new File(new File(d.asFile, "signed"), it.name) }
    }
    doLast {
        reobfJar.outputs.files.forEach {
            ant.signjar destDir: new File(jar.destinationDirectory.get().asFile, "signed"),
                sigfile: project.hasProperty("signerName") ? project.signerName : project.keyStoreAlias,
                keystore: project.keyStore,
                alias: project.keyStoreAlias,
                storepass: project.keyStorePass,
                keypass: project.keyStoreKeyPass,
                jar: it
        }
    }
}

assemble.dependsOn(signJar)
