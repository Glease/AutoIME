
name: Release tagged build

on:
  push:
    tags: [ '*' ]

permissions:
  contents: write

jobs:
  release-tags:
    runs-on: windows-latest
    env:
      VERSION: ${{ github.ref_name }}
      RELEASE_VERSION: ${{ github.ref_name }}
      SNAPSHOT: ${{ endsWith(github.ref_name, '-snapshot') || contains(github.event.head_commit.message, '[snapshot]') || contains(github.ref_name, 'alpha') || contains(github.ref_name, 'beta') }}
      #MAVEN_PUBLISHING_URL: ${{ vars.MAVEN_PUBLISHING_URL || 'https://nexus.gtnewhorizons.com/repository/releases/' }}
    steps:
      - name: Checkout mod repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 32

      - name: Validate gradle wrapper checksum
        uses: gradle/wrapper-validation-action@v2

      - name: Setup Windows SDK
        uses: GuillaumeFalourd/setup-windows10-sdk-action@v2
        with:
          # this is what I use on my system. I cannot guarantee any other version works
          sdk-version: 20348

      - name: Set up JDK versions
        uses: actions/setup-java@v4
        with:
          java-version: |
            8
          distribution: 'zulu'
          cache: gradle

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Setup the workspace
        #        run: ./gradlew --build-cache --info --stacktrace -PmavenPublishUrl='${{ env.MAVEN_PUBLISHING_URL }}' ${{ inputs.workspace }}
        run: ./gradlew --build-cache --info --stacktrace -PkeyStore= ${{ inputs.workspace }}

      - name: Write KeyStore to disk
        id: write_file
        uses: timheuer/base64-to-file@v1.2
        with:
          fileName: 'keystore.jks'
          fileDir: '.'
          encodedString: ${{ secrets.KEYSTORE }}

      - name: Build the mod
#        run: ./gradlew --build-cache --info --stacktrace -PmavenPublishUrl='${{ env.MAVEN_PUBLISHING_URL }}' assemble
        run: ./gradlew --build-cache --info --stacktrace -PsignerName=glease "-PkeyStore=keystore.jks" "-PkeyStoreAlias=${{ secrets.KEYSTORE_ALIAS }}" -PkeyStorePass="${{ secrets.KEYSTORE_STOREPASS }}" -PkeyStoreKeyPass="${{ secrets.KEYSTORE_KEYPASS }}" assemble && ./gradlew --stop

      # Continue on error in the following steps to make sure releases still get made even if one of the methods fails

      - name: Delete old release if it already exists
        run: gh release delete --yes "${RELEASE_VERSION}"
        continue-on-error: true
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Release under current tag
        run: |
          PRERELEASE=""
          if [[ "$SNAPSHOT" == "true" ]]; then
            PRERELEASE="--prerelease"
          fi
          export "CHANGELOG_FILE=$(mktemp --suffix=.md)"
          echo "CHANGELOG_FILE=${CHANGELOG_FILE}" >> $GITHUB_ENV
          gh api --method POST -H "Accept: application/vnd.github+json" \
            "repos/${GITHUB_REPOSITORY}/releases/generate-notes" \
            -f tag_name="${RELEASE_VERSION}" \
            --jq ".body" > "${CHANGELOG_FILE}"
          cat "${CHANGELOG_FILE}"
          gh release create "${RELEASE_VERSION}" -F "${CHANGELOG_FILE}" $PRERELEASE ./build/libs/signed/*.jar
        shell: bash
        continue-on-error: true
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      #- name: Publish to Maven
      #  run: ./gradlew --build-cache --info --stacktrace -PmavenPublishUrl='${{ env.MAVEN_PUBLISHING_URL }}' assemble publish -x test
      #  continue-on-error: true
      #  env:
      #    MAVEN_USER: ${{ secrets.MAVEN_USER }}
      #    MAVEN_PASSWORD: ${{ secrets.MAVEN_PASSWORD }}
      #  if: ${{ env.MAVEN_USER != '' }}

      #- name: Publish to Modrinth and CurseForge
      #  run: ./gradlew --build-cache --info --stacktrace -PmavenPublishUrl='${{ env.MAVEN_PUBLISHING_URL }}' assemble publish -x test
      #  continue-on-error: true
      #  env:
      #    MODRINTH_TOKEN: ${{ secrets.MODRINTH_TOKEN }}
      #    CURSEFORGE_TOKEN: ${{ secrets.CURSEFORGE_TOKEN }}
      #  if: ${{ env.SNAPSHOT != 'true' }}
